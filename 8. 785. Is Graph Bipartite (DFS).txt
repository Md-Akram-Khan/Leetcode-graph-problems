class Solution {
    private:
    bool check(int parent, int col, vector<int> &color, vector<vector<int>> graph)
    {
        color[parent] = col;
        for(auto it : graph[parent])
        {
            if(color[it] == -1)
            {
                if(!check(it, !col, color, graph)) return false;
            }
            else if(color[it] == col) return false;
        }
        return true;
    }
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> color(n, -1);
        for(int i = 0; i < n; i++)
        {
            if(color[i] == -1)
            {
                if(!check(i, 0, color, graph)) return false;
            }
        }
        return true;
    }
};