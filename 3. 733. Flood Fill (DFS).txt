class Solution {
    private:
    void dfs(int row, int coln, vector<vector<int>> image, vector<vector<int>>& ans,int pc, int color)
    {
        int m = image.size(), n = image[0].size();
            ans[row][coln] = color;
                int a[] = {0, 0, 1, -1}, b[] = {1, -1, 0, 0};
                for(int i = 0; i < 4; i++)
                {
                    int nrow = row + a[i], ncoln = coln + b[i];
                    if(nrow >= 0 and nrow < m and ncoln >= 0 and ncoln < n and ans[nrow][ncoln] != color and image[nrow][ncoln] == pc)
                    {
                        dfs(nrow, ncoln, image, ans, pc, color);
                    }
                }
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        vector<vector<int>> ans = image;
        int pc = image[sr][sc];
        if(pc != color)
        {
                dfs(sr, sc, image, ans, pc, color);
        }
        return ans;
    }
};