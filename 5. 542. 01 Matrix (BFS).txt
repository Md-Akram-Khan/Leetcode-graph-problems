class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m = mat.size(), n = mat[0].size();
        queue<pair<pair<int, int>, int>> q;
        vector<vector<int>> vis(m, vector<int> (n, 0));
        vector<vector<int>> dis(m, vector<int> (n, 0));
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(mat[i][j] == 0)
                {
                    q.push({{i, j}, 0});
                    dis[i][j] = 0;
                    vis[i][j] = 1;
                }
            }
        }
        int a[] = {0, 0, 1, -1};
        int b[] = {1, -1, 0, 0};
        while(!q.empty())
        {
            int r = q.front().first.first, c = q.front().first.second, t = q.front().second;
            q.pop();
            for(int i = 0; i < 4; i++)
            {
                int nr = r + a[i], nc = c + b[i];
                if(nr >= 0 and nr < m and nc >= 0 and nc < n and !vis[nr][nc] and mat[nr][nc] == 1)
                {
                    vis[nr][nc] = 1;
                    dis[nr][nc] = t + 1;
                    q.push({{nr, nc}, t + 1});
                }
            }
        }
        return dis;
    }
};