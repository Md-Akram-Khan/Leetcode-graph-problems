class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<int> adj[n];
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(isConnected[i][j] == 1)
                {
                    adj[i].push_back(j);
                }
            }
        }
    int cnt = 0;
    vector<int> vis(n, 0);
    queue<int> q;
    for(int i = 0; i < n; i++)
    {
        if(!vis[i])
        {
            cnt++;
            vis[i] = 1;
            q.push(i);
            while(!q.empty())
            {
                int node = q.front();
                q.pop();
                for(auto it : adj[node])
                {
                    if(!vis[it])
                    {
                        q.push(it);
                        vis[it] = 1;
                    }
                }
            }
        }
    }
    return cnt;
    }
};
